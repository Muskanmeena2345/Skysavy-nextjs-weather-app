import Image from "next/image";
import { Inter } from "next/font/google";
import Head from "next/head";
import axios from "axios";
import { useState } from "react";
import { BsSearch } from 'react-icons/bs';
import Weather from "@/components/weather";
import spinning from '../public/spinning.gif'

axios.get('https://api.example.com/data')
  .then(response => {
    console.log(response.data);
  })
  .catch(error => {
    console.error('There was an error fetching the data!', error);
  });


const inter = Inter({ subsets: ["latin"] });

export default function Home() {
const[city, setCity] = useState('');
const [weather,setWeather] = useState({});
const[loading,setLoading] = useState(false);


const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=imperial&appid=${process.env.NEXT_PUBLIC_WEATHER_KEY}`
console.log(city)
const fetchWeather = (e) => {
  e.preventDefault();
  setLoading(true);
  axios.get(url)
    .then((response) => {
      setWeather(response.data);
    })
    .catch((error) => {
      console.error(error);
      if (error.response) {
        console.error(error.response.data);
        console.error(error.response.status);
        console.error(error.response.headers);
      }
    })
    .finally(() => {
      setLoading(false);
    });
};
if(loading){
return <spinning/>
}
else{
return (
    <div>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
<div className='absolute top-0 right-0 bottom-0 bg-black/90 z-[1]'/>
<Image src='https://i.pinimg.com/564x/14/fc/f9/14fcf9ddd50abcd142e58154ff0a301e.jpg'
layout='fill'
className='object-cover'/>
    
{/* searchoption */}

<div className='relative flex justify-between items-center max-w-[500px] w-full m-auto pt-4 text-white z-10'>
<form onSubmit={fetchWeather} className='flex justify-between items-center w-full m-auto p-3 bg-transparent border border-gray-300 text-white rounded-2xl'>
<div>
<input
onChange={(e) => setCity(e.target.value)}
 className='bg-transparent border-none text-white focus:outline-none text-2xl placeholder:text-white'  type='text' placeholder='Search City'/>
</div> 
<button onClick={fetchWeather}>
<BsSearch size={20}/>
</button>
</form>
</div>


{/* weather  */}

{weather.main && <Weather data={weather}/>}
</div>


 );
}
}